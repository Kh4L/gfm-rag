[tool.poetry]
name = "deep-graphrag"
version = "0.1.0"
description = ""
authors = ["RManLuo <34737002+RManLuo@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "deep_graphrag"}]

[tool.poetry.dependencies]
python = "^3.12"
torch = {version = "2.4.1", source = "pytorch-gpu"}
torch-geometric = "2.4.0"
torch-scatter = {version = "2.1.2", source = "pyg-gpu"}
torch-sparse = {version = "0.6.18", source = "pyg-gpu"}
ninja = "^1.11.1.1"
easydict = "^1.13"
pyyaml = "^6.0.2"
tqdm = "^4.66.5"
sentence-transformers = "^3.2.0"
hydra-core = "^1.3.2"
python-dotenv = "^1.0.1"
wandb = "^0.18.5"


[[tool.poetry.source]]
name = "pytorch-gpu"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"


[[tool.poetry.source]]
name = "pyg-gpu"
url = "https://data.pyg.org/whl/torch-2.4.0+cu124.html"
priority = "explicit"


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
types-pyyaml = "^6.0.12.20240917"
mypy = "^1.12.1"
pytest = "^8.3.3"

[tool.mypy]
mypy_path = "./deep_graphrag"
cache_dir = "~/.mypy_cache"

[tool.ruff]
exclude = ['deep_graphrag/ultra']

[tool.ruff.lint]
extend-select = ["I", "N", "UP", "B", "PD002"]
extend-ignore = ["E501", "E203", "E266"]
unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" =  ["F401"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
